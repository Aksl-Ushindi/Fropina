from fastapi import FastAPI, Request, Form
from fastapi.responses import PlainTextResponse
import openai
from twilio.twiml.messaging_response import MessagingResponse
import uvicorn

app = FastAPI()

# ‚ú® Cl√© API OpenAI (√† s√©curiser dans env var)
openai.api_key = "sk-..."

# üåü Prompt syst√®me Fropina
FROPINA_PROMPT = """
Tu es Fropina, une experte en soins capillaires naturels pour cheveux afro, boucl√©s, cr√™pus et fr√©sis. (...)
"""

@app.post("/whatsapp", response_class=PlainTextResponse)
async def whatsapp_webhook(
    Body: str = Form(..., description="Message texte envoy√© par l'utilisateur"),
    From: str = Form(..., description="Num√©ro de l'exp√©diteur")
):
    try:
        # OpenAI GPT-4 Call
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": FROPINA_PROMPT},
                {"role": "user", "content": Body}
            ]
        )
        gpt_reply = response["choices"][0]["message"]["content"]
    except Exception as e:
        gpt_reply = f"Oops, erreur GPT : {str(e)}"

    # R√©ponse Twilio (format XML text/plain)
    twilio_response = MessagingResponse()
    twilio_response.message(gpt_reply)
    return str(twilio_response)

# üöÄ Localhost pour test
if __name__ == "__main__":
    uvicorn.run("main:app", host="0.0.0.0", port=8000, reload=True)
